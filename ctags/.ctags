--recurse=yes
--python-kinds=-iv
--langdef=Swift
--langmap=Swift:.swift
--kinddef-Swift=n,enum,enums
--kinddef-Swift=t,typealias,typealiases  
--kinddef-Swift=p,protocol,protocols
--kinddef-Swift=s,struct,structs
--kinddef-Swift=c,class,classes
--kinddef-Swift=f,function,functions
--kinddef-Swift=v,variable,variables
--kinddef-Swift=e,extension,extensions
--regex-Swift=/^[ \t]*enum[ \t]+([^:\{<\s]+).*$/\1/n/{scope=push}
--regex-Swift=/^[ \t]*typealias[ \t]+([^:=<\s]+).*$/\1/t/
--regex-Swift=/^[ \t]*protocol[ \t]+([^:\{<\s]+).*$/\1/p/{scope=push}
--regex-Swift=/^[ \t]*struct[ \t]+([^:\{<\s]+).*$/\1/s/{scope=push}
--regex-Swift=/^[ \t]*class[ \t]+([^:\{<\s]+).*$/\1/c/{scope=push}
--regex-Swift=/^[ \t]*extension[ \t]+([^:\{<\s]+).*$/\1/e/{scope=push}
--regex-Swift=/^[ \t]+func[ \t]+([^\(\)<\s]+)\([^\(\)]*\)/\1/f/{scope=ref}
--regex-Swift=/^[ \t]+(var|let)[ \t]+([^:=<\s]+).*$/\2/v/{scope=ref}
--regex-Swift=/^[ \t]*\}//{placeholder}{scope=pop}
--extras=+r
